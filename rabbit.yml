version: "3.8"
# docker stack deploy -c rabbit.yml rabbit
# docker compose -f rabbit.yml run rabbit -d

services:
  rabbit:
    hostname: "dev-rabbitmq"
    image: rabbitmq:3.9-management-alpine
    container_name: "rabbitmq"
    # hostname: rabbit_host
    environment:
      RABBITMQ_ERLANG_COOKIE: SMOCKINGISNOTGOODFORUS
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 15672:15672
      - 5672:5672
    volumes: # make sure directories exists
      - ../databases/rabbitmq/data/:/var/lib/rabbitmq
      - ../databases/rabbitmq/logs/:/var/log/rabbitmq
      # - ../databases/rabbitmq/etc/:/etc/rabbitmq
    # networks:
    #     - rabbitmq_go_net
networks:
  rabbitmq_go_net:
    driver: bridge
#
# CLUSTER START HERE
#
#  # First slave rabbitmq
#  rabbit2:
#    image: rabbitmq:3-management
#    hostname: rabbitmq_slave1
#    links:
#      - rabbitmq_master
#    environment:
#      - CLUSTERED=true
#      - CLUSTER_WITH=rabbitmq_master
#      - RAM_NODE=true
#    ports:
#      - "5673:5672"
#      - "15673:15672"
#
#  # Second slave rabbitmq
#  rabbit3:
#    image: rabbitmq:3-management
#    hostname: rabbitmq_slave2
#    links:
#      - rabbitmq_master
#      - rabbitmq_slave1
#    environment:
#      - CLUSTERED=true
#      - CLUSTER_WITH=rabbitmq_master
#    ports:
#      - "5674:5672"
